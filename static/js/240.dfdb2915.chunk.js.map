{"version":3,"file":"static/js/240.dfdb2915.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","components/ContactForm/ContactForm.jsx","components/ContactsList/ContactItem.styled.js","components/ContactsList/ContactItem.jsx","components/ContactsList/ContactList.jsx","components/FilterQuery/Filter.jsx","pages/PhonebookPage.js"],"sourcesContent":["import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectFilterName = state => state.filter.name;\n\nexport const selectCurrentContacts = createSelector(\n  [selectContacts, selectFilterName],\n  (contacts, filterName) => {\n    if (!filterName) return contacts;\n    else {\n      return contacts.filter(contact =>\n        contact.name.toLowerCase().includes(filterName.toLowerCase())\n      );\n    }\n  }\n);\n","import { ErrorMessage, Field, Formik } from 'formik';\nimport * as Yup from 'yup';\nimport {\n  ButtonContainer,\n  StyledButton,\n  StyledForm,\n} from 'components/ContactForm/ContactForm.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/contacts/operations';\nimport { selectContacts } from 'redux/contacts/selectors';\n\nconst ContactSchema = Yup.object().shape({\n  name: Yup.string('Invalid name').required('Enter name'),\n  number: Yup.number('Invalid phone').required('Enter phone'),\n});\n\nexport const ContactForm = () => {\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const handleAddContact = values => {\n    let check = contacts.find(contact => contact.name === values.name);\n    if (check) {\n      alert(`${values.name} is already in contacts`);\n      return;\n    }\n\n    dispatch(addContact([values.name, values.number]));\n  };\n\n  return (\n    <Formik\n      initialValues={{ name: '', number: '' }}\n      validationSchema={ContactSchema}\n      onSubmit={(values, actions) => {\n        handleAddContact(values);\n        actions.resetForm();\n      }}\n    >\n      <StyledForm>\n        <label>\n          <p>Name</p>\n          <Field type=\"text\" name=\"name\" required />\n          <ErrorMessage name=\"name\" component=\"div\" />\n        </label>\n        <label>\n          <p>Number</p>\n          <Field type=\"tel\" name=\"number\" required />\n          <ErrorMessage name=\"number\" component=\"div\" />\n        </label>\n        <ButtonContainer>\n          <StyledButton variant=\"contained\" type=\"submit\">\n            Add contact\n          </StyledButton>\n        </ButtonContainer>\n        <ButtonContainer />\n      </StyledForm>\n    </Formik>\n  );\n};\n","import styled from 'styled-components';\nimport { Button } from '@mui/material';\n\nexport const ButtonContainer = styled.span`\n  margin-left: 20px;\n`;\n\nexport const ButtonDelete = styled(Button)`\n  height: 26px;\n  font-size: 12px;\n  background-color: #e3e3e3;\n  border: 2px solid #d5d5d5;\n  border-radius: 3px;\n\n  &:hover,\n  &:active {\n    background-color: #949494;\n    border-color: #747474;\n    cursor: pointer;\n  }\n`;\n","import { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\nimport { ButtonContainer, ButtonDelete } from './ContactItem.styled';\n\nexport const Contact = ({ name, phone, id }) => {\n  const dispatch = useDispatch();\n\n  const handleDeleteContact = id => dispatch(deleteContact(id));\n\n  return (\n    <div>\n      {name} - {phone}\n      <ButtonContainer>\n        <ButtonDelete\n          variant=\"outlined\"\n          size=\"small\"\n          onClick={() => handleDeleteContact(id)} >\n          Delete\n        </ButtonDelete>\n      </ButtonContainer>\n    </div>\n  );\n};\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Contact } from './ContactItem';\nimport {\n  selectIsLoading,\n  selectError,\n  selectCurrentContacts,\n} from 'redux/contacts/selectors';\nimport { fetchContacts } from 'redux/contacts/operations';\n\nexport const ContactList = () => {\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  const currentContacts = useSelector(selectCurrentContacts);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <div>\n      {isLoading && <h5>Loading...</h5>}\n      {error && <h5>Error...</h5>}\n      {currentContacts.length > 0 ? (\n        <ul>\n          {currentContacts.map(contact => (\n            <li key={contact.id}>\n              <Contact\n                name={contact.name}\n                phone={contact.number}\n                id={contact.id}\n              />\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <h5>No contacts</h5>\n      )}\n    </div>\n  );\n};\n","import { useDispatch } from 'react-redux';\nimport { changeFilterName } from 'redux/contacts/filterSlice';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n\n  const onFilteredName = value => {\n    dispatch(changeFilterName(value));\n  };\n\n  return (\n    <div>\n      <p>Find contacts by name</p>\n      <input\n        type=\"text\"\n        name=\"filterName\"\n        onChange={evt => onFilteredName(evt.target.value)}\n      />\n    </div>\n  );\n};\n","import { ContactForm } from 'components/ContactForm/ContactForm';\nimport { ContactList } from 'components/ContactsList/ContactList';\nimport { Filter } from 'components/FilterQuery/Filter';\n\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n  width: 460px;\n  margin: 60px auto;\n  padding: 20px;\n`;\n\nexport default function Phonebook() {\n  return (\n    <Container>\n      <h2>Phonebook</h2>\n      <ContactForm />\n      <h2>Contacts</h2>\n      <Filter />\n      <ContactList />\n    </Container>\n  );\n}\n"],"names":["selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectCurrentContacts","createSelector","filter","name","filterName","contact","toLowerCase","includes","ContactSchema","Yup","shape","required","number","ContactForm","useSelector","dispatch","useDispatch","_jsx","Formik","initialValues","validationSchema","onSubmit","values","actions","find","alert","concat","addContact","handleAddContact","resetForm","children","_jsxs","StyledForm","Field","type","ErrorMessage","component","ButtonContainer","StyledButton","variant","styled","_templateObject","_taggedTemplateLiteral","ButtonDelete","Button","_templateObject2","Contact","_ref","phone","id","size","onClick","deleteContact","handleDeleteContact","ContactList","currentContacts","useEffect","fetchContacts","length","map","Filter","onChange","evt","value","target","changeFilterName","Container","Phonebook"],"sourceRoot":""}